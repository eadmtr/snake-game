{"version":3,"sources":["snake/core.cljs"],"mappings":";AAWA,uBAAA,vBAAMA;AAAN,AACE,GAAMC;AAAN,AACE,gHAAA,zGAACC;;AADH;;;AAGF,wBAAA,xBAAuBC;AAAvB,AACE,AAACC;;AACD,IAAMC,UAAQ,wBAAA,xBAAiBC;AAA/B,AACE,AAACC,sCAA+BF;;AAChC,wDAAA,jDAACG,oIAAaC,+BAAkBJ;;AAEpC,kBAAA,lBAAMK;AAAN,AACE,AAACC;;AACD,4BAAA,mFAAA,/GAACC;;AACD,AAACZ;;AACD,OAACG","names":["snake.core/dev-setup","snake.config/debug?","cljs.core.println","snake.core/mount-root","re-frame.core/clear-subscription-cache!","root-el","js/document","reagent.dom/unmount-component-at-node","reagent.dom.render","snake.views/main-panel","snake.core/init","snake.routes/start!","re-frame.core/dispatch-sync"],"sourcesContent":["(ns snake.core\n  (:require\n   [reagent.dom :as rdom]\n   [re-frame.core :as re-frame]\n   [snake.events :as events]\n   [snake.routes :as routes]\n   [snake.views :as views]\n   [snake.config :as config]\n   ))\n\n\n(defn dev-setup []\n  (when config/debug?\n    (println \"dev mode\")))\n\n(defn ^:dev/after-load mount-root []\n  (re-frame/clear-subscription-cache!)\n  (let [root-el (.getElementById js/document \"app\")]\n    (rdom/unmount-component-at-node root-el)\n    (rdom/render [views/main-panel] root-el)))\n\n(defn init []\n  (routes/start!)\n  (re-frame/dispatch-sync [::events/initialize-db])\n  (dev-setup)\n  (mount-root))\n"]}