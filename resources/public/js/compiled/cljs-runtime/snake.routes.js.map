{"version":3,"sources":["snake/routes.cljs"],"mappings":";AAOA,GAAA,QAAAA,kCAAAC,yCAAAC;AAAA;AAAA,AAAA,sBAAA,iBAAAC,6BAAA,AAAAC,6CAAA,jHAAUS;IAAVR,6BAAA,AAAAD,6CAAA;IAAAE,6BAAA,AAAAF,6CAAA;IAAAG,iCAAA,AAAAH,6CAAA;IAAAI,0BAAA,AAAAC,4CAAA,mCAAA,gEAAA,iBAAAC,eAAA;AAAA,AAAA,QAAAA,6CAAAA,+CAAAA;;AAAA,AAAA,YAAAC,kBAAA,AAAAC,+CAAA,eAAA,6BAAA,4DAAAJ,wBAAAL,2BAAAE,2BAAAC,2BAAAC,xLAAiBO;;;AACjB,AAAAD,gEAAA,4DAAA;AAAA,AAAA,0FAAA,mDAAA;;AAEA,AAAKE,sBACH,6CAAA,mFAAA,IAAA,2CAAA,GAAA,oDAAA,QAAA,9OAACX;AAIH,qBAAA,rBAAMY,kDACHC;AADH,AAEE,6BAAA,AAAAC,tBAACC,sCAAkBJ,qBAAOE;;AAE5B,AAAA,uBAAA,+BAAAG,tDAAMM;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,0DAAAF;;;AAAA,AAAA,CAAA,4DAAA,5DAAME,uEACDI;AADL,AAEE,OAACC,8CAAMC,mBAAc,6CAAA,mFAAA,AAAAd,hIAACe,gJAAOlB,6BAAQe;;;AAFvC,CAAA,+CAAA,/CAAMJ;;AAAN;AAAA,CAAA,yCAAA,WAAAC,pDAAMD;AAAN,AAAA,IAAAE,qBAAA;AAAA,AAAA,OAAAA,wDAAA,AAAAC,cAAAF;;;AAAA,AAIA,wBAAA,xBAAMO,wDACHC;AADH,AAEE,IAAMC,QAAM,AAACC,gDAAQ,iHAAA,hHAAK,AAACC,eAAK,AAAA,yFAAUH;AAA1C,AACE,8BAAA,mFAAA,1GAACI,+MAA6CH;;AAElD,GAAA,QAAApC,kCAAAC,yCAAAuC;AAAA;AAAA,AAAA,AAASC,uBACP,AAACC,iBAAYR,sBAASlB;;AAExB,8BAAA,9BAAM2B,oEACHC;AADH,AAEE,OAAkBH,sEAAQ,AAACI,4GAAQD;;AAErC,2BAAA,3BAAME;AAAN,AAEE,OAAcL;;AAEhB,qBAAA,rBAACM,iFAEC,WAAKH;AAAL,AACE,OAACD,4BAAUC","names":["js/snake","js/snake.routes","js/snake.routes.panels","method-table__5642__auto__","cljs.core.atom","prefer-table__5643__auto__","method-cache__5644__auto__","cached-hierarchy__5645__auto__","hierarchy__5646__auto__","cljs.core.get","fexpr__52289","cljs.core/MultiFn","cljs.core.symbol","snake.routes/panels","cljs.core/identity","snake.routes/routes","snake.routes/parse","url","cljs.core/deref","bidi.bidi/match-route","var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","snake.routes/url-for","seq52290","self__5755__auto__","cljs.core/seq","args","cljs.core.apply","bidi.bidi/path-for","cljs.core.into","snake.routes/dispatch","route","panel","cljs.core.keyword","cljs.core/name","re-frame.core/dispatch","js/snake.routes.history","snake.routes/history","pushy.core/pushy","snake.routes/navigate!","handler","snake.routes.url_for","snake.routes/start!","re-frame.core/reg-fx"],"sourcesContent":["(ns snake.routes\n  (:require\n   [bidi.bidi :as bidi]\n   [pushy.core :as pushy]\n   [re-frame.core :as re-frame]\n   [snake.events :as events]))\n\n(defmulti panels identity)\n(defmethod panels :default [] [:div \"No panel found for this route.\"])\n\n(def routes\n  (atom\n    [\"/\" {\"\"      :home\n          \"about\" :about}]))\n\n(defn parse\n  [url]\n  (bidi/match-route @routes url))\n\n(defn url-for\n  [& args]\n  (apply bidi/path-for (into [@routes] args)))\n\n(defn dispatch\n  [route]\n  (let [panel (keyword (str (name (:handler route)) \"-panel\"))]\n    (re-frame/dispatch [::events/set-active-panel panel])))\n\n(defonce history\n  (pushy/pushy dispatch parse))\n\n(defn navigate!\n  [handler]\n  (pushy/set-token! history (url-for handler)))\n\n(defn start!\n  []\n  (pushy/start! history))\n\n(re-frame/reg-fx\n  :navigate\n  (fn [handler]\n    (navigate! handler)))\n"]}